name: Build Site
on: [push]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Set up .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: "5.0.x"
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "16"
      - name: Set up SASS
        run: |
          npm install -g sass
      - name: Get Environment (Development)
        if: github.ref != 'refs/heads/master' && !contains(github.ref, '/rl-')
        run: |
          echo "buildConfiguration=Debug" >> $GITHUB_ENV
      - name: Get Environment (Production)
        if: github.ref == 'refs/heads/master' || contains(github.ref, '/rl-')
        run: |
          echo "buildConfiguration=Release" >> $GITHUB_ENV
      - name: Build Site
        run: |
          dotnet publish src/BWHazel.Api.sln -c ${{ env.buildConfiguration }} -o dist
      - name: Upload Build Artefact
        uses: actions/upload-artifact@v2
        with:
          name: bwhazel-api
          path: dist
  publish:
    runs-on: ubuntu-latest
    needs: build
    if: contains(github.ref, '/rl-')
    steps:
      - name: Set Docker Image Info
        run: |
          echo "dockerRepository=bwhazel/api" >> $GITHUB_ENV
          echo "dockerImageTag=`awk -F '-' '{print $NF}' <<< ${{ github.ref }}`" >> $GITHUB_ENV
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Download Build Artefact
        uses: actions/download-artifact@v2
        with:
          name: bwhazel-api
          path: dist
      - name: Log into Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Build & Push Image to Docker Hub
        uses: docker/build-push-action@v2
        with:
          context: .
          target: deploy
          push: true
          tags: ${{ env.dockerRepository }}:latest,${{ env.dockerRepository }}:${{ env.dockerImageTag }}